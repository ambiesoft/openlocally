//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace openlocally.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("openlocally.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File or Folder &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string FILE_OR_FOLDER_NOT_EXIST {
            get {
                return ResourceManager.GetString("FILE_OR_FOLDER_NOT_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local path for &apos;{0}&apos; is not found..
        /// </summary>
        internal static string LOCAL_PATH_NOT_FOUND {
            get {
                return ResourceManager.GetString("LOCAL_PATH_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one argument.
        /// </summary>
        internal static string MORE_THAN_1_ARGUMENTS {
            get {
                return ResourceManager.GetString("MORE_THAN_1_ARGUMENTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Arguments.
        /// </summary>
        internal static string NO_ARGUMENTS {
            get {
                return ResourceManager.GetString("NO_ARGUMENTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not hosted on this machine..
        /// </summary>
        internal static string PATH_NOT_HOSTED {
            get {
                return ResourceManager.GetString("PATH_NOT_HOSTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path is resolved to &apos;{0}&apos;. Do you want to open it?.
        /// </summary>
        internal static string PATH_RESOLVED_DO_YOU_WANT_TO_OPEN {
            get {
                return ResourceManager.GetString("PATH_RESOLVED_DO_YOU_WANT_TO_OPEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Program &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string PROGRAM_NOT_EXIST {
            get {
                return ResourceManager.GetString("PROGRAM_NOT_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server is null.
        /// </summary>
        internal static string SERVER_NULL {
            get {
                return ResourceManager.GetString("SERVER_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serve and Share are null.
        /// </summary>
        internal static string SERVERANDSHARE_NULL {
            get {
                return ResourceManager.GetString("SERVERANDSHARE_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ShareCollection is null.
        /// </summary>
        internal static string SHARECOLLECTION_NULL {
            get {
                return ResourceManager.GetString("SHARECOLLECTION_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many arguments.
        /// </summary>
        internal static string TOO_MANY_ARGUMENTS {
            get {
                return ResourceManager.GetString("TOO_MANY_ARGUMENTS", resourceCulture);
            }
        }
    }
}
